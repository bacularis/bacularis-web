<%@ MasterClass="Bacularis\Web\Layouts\Main" Theme="Baculum-v2"%>
<com:TContent ID="Main">
	<com:BClientScript ScriptUrl=<%~ ../../../../../vendor/bower-asset/opentip/downloads/opentip-jquery.min.js %> />
	<com:BStyleSheet StyleSheetUrl=<%~ ../../../../../vendor/bower-asset/opentip/css/opentip.css %> />
	<!-- Header -->
	<header class="w3-container">
		<h5>
			<b><i class="fa fa-cog"></i> <%[ Application settings ]%></b>
		</h5>
	</header>
	<div class="w3-margin-left">
		<a href="<%=$this->Service->constructUrl('WebConfigWizard')%>" class="w3-button w3-margin-bottom w3-green<%=$this->getModule('users')->isPageAllowed($this->User, 'WebConfigWizard') ? '' : ' hide'%>"><i class="fa fa-magic"></i> &nbsp;<%[ Settings ]%></a>
	</div>
	<div class="w3-bar w3-green w3-margin-bottom">
		<a id="btn_application_settings_general" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn w3-grey" onclick="W3Tabs.open(this.id, 'application_settings_general');">
			<%[ General ]%>
		</a>
		<a id="btn_application_settings_display" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn" onclick="W3Tabs.open(this.id, 'application_settings_display');">
			<%[ Display options ]%>
		</a>
		<a id="btn_application_settings_features" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn" onclick="W3Tabs.open(this.id, 'application_settings_features');">
			<%[ Features ]%>
		</a>
		<a id="btn_application_settings_plugins" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn" onclick="W3Tabs.open(this.id, 'application_settings_plugins'); oPluginListSettings.table.responsive.recalc();">
			<%[ Plugins ]%>
		</a>
		<a id="btn_application_settings_audit_log" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn" onclick="W3Tabs.open(this.id, 'application_settings_audit_log'); if (oAppSettingsAuditLog.table) { oAppSettingsAuditLog.table.responsive.recalc(); oAppSettingsAuditLog.table.columns.adjust().draw(); }">
			<%[ Audit log ]%>
		</a>
		<a id="btn_application_settings_self_test" href="javascript:void(0)" class="w3-bar-item w3-button tab_btn" onclick="W3Tabs.open(this.id, 'application_settings_self_test');">
			<%[ Health self test ]%>
		</a>
	</div>
	<!-- General options -->
	<div class="w3-container tab_item" id="application_settings_general">
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Language: ]%></div>
			<div class="w3-quarter w3-col">
				<com:TActiveDropDownList
					ID="Language"
					CssClass="w3-select w3-border"
					CausesValidation="false"
					AutoPostBack="false"
					ActiveControl.EnableUpdate="false"
					Width="150px"
				>
					<com:TListItem Value="en" Text="English" />
					<com:TListItem Value="fr" Text="French" />
					<com:TListItem Value="ko" Text="Korean" />
					<com:TListItem Value="pl" Text="Polish" />
					<com:TListItem Value="pt" Text="Portuguese" />
					<com:TListItem Value="ja" Text="Japanese" />
					<com:TListItem Value="ru" Text="Russian" />
				</com:TActiveDropDownList>
			</div>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Enable debug ]%></div>
			<div class="w3-quarter w3-col">
				<com:TCheckBox
					ID="Debug"
					CssClass="w3-check"
					Attributes.onclick="if (this.checked){document.getElementById('debug_confirm').style.display='block';}"
				/>
			</div>
		</div>
		<div class="w3-center">
			<com:TActiveLinkButton
				CssClass="w3-button w3-green"
				CausesValidation="true"
				ValidationGroup="AppSettingGeneral"
				OnClick="saveGeneral"
			>
				<prop:ClientSide.OnLoading>
					document.getElementById('save_settings_general_loader').style.display = '';
				</prop:ClientSide.OnLoading>
				<prop:ClientSide.OnComplete>
					setTimeout(function() {
						document.getElementById('save_settings_general_loader').style.display = 'none';
					}, 300)
				</prop:ClientSide.OnComplete>
				<i class="fa fa-save"></i> &nbsp;<%[ Save ]%>
			</com:TActiveLinkButton>
			<i id="save_settings_general_loader" class="fa fa-sync w3-spin" style="display: none"></i>
		</div>
		<div id="debug_confirm" class="w3-modal" style="display: none">
			<div class="w3-modal-content w3-card-4 w3-animate-zoom w3-padding" style="max-width: 600px">
				<span onclick="document.getElementById('debug_confirm').style.display='none'" class="w3-button w3-xlarge w3-hover-red w3-display-topright">&times;</span>
				<h4><%[ Enable debug ]%></h4>
				<p class="justify"><%[ Debug files enable possibility to save most of actions executed on Bacularis WebGUI. Debug functionality should be enabled if there is happening something wrong with Bacularis or if something that looks like a bug. Logs can be useful for detecting a problems in Bacularis working. After confirmation this message Bacularis debug files will be continuously saving in /protected/Web/Logs/ directory. Are you sure? ]%></p>
				<div class="w3-center">
					<button class="w3-button w3-red" type="button" onclick="document.getElementById('<%=$this->Debug->ClientID%>').checked = false; document.getElementById('debug_confirm').style.display='none'"><i class="fa fa-times"></i> &nbsp;<%[ No ]%></button>
					<button class="w3-button w3-green" type="button" onclick="document.getElementById('debug_confirm').style.display='none'"><i class="fa fa-check"></i> &nbsp;<%[ Yes ]%></button>
				</div>
			</div>
		</div>
	</div>
	<!-- Display options -->
	<div class="w3-container tab_item" id="application_settings_display" style="display: none">
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Max. number of jobs visible in tables ]%></div>
			<div class="w3-quarter w3-col">
				<com:TTextBox
					ID="MaxJobs"
					CssClass="w3-input w3-border w3-show-inline-block"
					ValidationGroup="AppSettingDisplay"
					Width="120px"
				/>
				<i class="fa fa-asterisk w3-text-red"></i>
				<com:TRequiredFieldValidator
					ID="MaxJobsRequiredValidator"
					ValidationGroup="AppSettingDisplay"
					ControlToValidate="MaxJobs"
					ErrorMessage="<%[ Field required. ]%>"
					Display="Dynamic"
				/>
				<com:TDataTypeValidator
					ID="MaxJobsTypeValidator"
					ValidationGroup="AppSettingDisplay"
					ControlToValidate="MaxJobs"
					ErrorMessage="<%[ Max. number of jobs value must be integer greather than 0. ]%>"
					Display="Dynamic"
					DataType="Integer"
				/>
			</div>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Keep custom table settings: ]%></div>
			<div class="w3-quarter w3-col">
				<p><com:TRadioButton
					ID="KeepTableSettingsNoLimit"
					CssClass="w3-radio"
					GroupName="KeepTableSettings"
					Attributes.onclick="$('#keep_table_settings_specific_time').hide(); if (Prado.Validation.validateControl('<%=$this->KeepTableSettingsFor->Directive->ClientID%>') === false) { reset_keep_time_settings_for_field(); }"
				/> <com:TLabel ForControl="KeepTableSettingsNoLimit"><%[ No time limit (persistent settings) ]%></com:TLabel></p>
				<p>
				<com:TRadioButton
					ID="KeepTableSettingsEndOfSession"
					CssClass="w3-radio"
					GroupName="KeepTableSettings"
					Attributes.onclick="$('#keep_table_settings_specific_time').hide(); if (Prado.Validation.validateControl('<%=$this->KeepTableSettingsFor->Directive->ClientID%>') === false) { reset_keep_time_settings_for_field(); }"
				/> <com:TLabel ForControl="KeepTableSettingsEndOfSession"><%[ Until end of web browser session ]%></com:TLabel></p>
				<com:TRadioButton
					ID="KeepTableSettingsSpecificTime"
					CssClass="w3-radio"
					GroupName="KeepTableSettings"
					Attributes.onclick="$('#keep_table_settings_specific_time').show(); Prado.Validation.validateControl('<%=$this->KeepTableSettingsFor->Directive->ClientID%>')"
				/> <com:TLabel ForControl="KeepTableSettingsSpecificTime"><%[ For specific time ]%></com:TLabel></p>
			</div>
			<div id="keep_table_settings_specific_time" style="display: <%=$this->KeepTableSettingsSpecificTime->Checked ? 'block' : 'none'%>;">
				<com:Bacularis.Web.Portlets.DirectiveTimePeriod
					ID="KeepTableSettingsFor"
					DirectiveName="KeepTableSettingsFor"
					Label="<%[ Keep table settings for ]%>"
					ValidationGroup="AppSettingDisplay"
					DefaultValue="<%=WebConfig::DEF_KEEP_TABLE_SETTINGS%>"
					Show="true"
					Required="true"
					ShowResetButton="false"
					ShowRemoveButton="false"
					TimeFormat="hour"
					Doc="<%[ Set time for which table settings will be preserved. Setting 0 (zero) is equivalent to no time limit option. ]%>"
				/>
			</div>
			<script>
				function reset_keep_time_settings_for_field() {
					const ctl_id = '<%=$this->KeepTableSettingsFor->Directive->ClientID%>';
					const ctl_format_id = '<%=$this->KeepTableSettingsFor->TimeFormat->ClientID%>';
					const val = '<%=$this->KeepTableSettingsFor->getValue() ?: $this->KeepTableSettingsFor->DefaultValue%>';
					const ftime = Units.format_time_period(parseInt(val, 'seconds'));
					$('#' + ctl_id).val(ftime.value);
					$('#' + ctl_format_id).val(ftime.format);
				}
			</script>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Show size values as: ]%></div>
			<div class="w3-quarter w3-col">
				<p><com:TRadioButton
					ID="DecimalBytes"
					CssClass="w3-radio"
					GroupName="SizeBytes"
				/> <com:TLabel ForControl="DecimalBytes"><%[ Decimal Bytes (1 mega = 10<sup>6</sup>) ]%></com:TLabel></p>
				<p>
				<com:TRadioButton
					ID="BinaryBytes"
					CssClass="w3-radio"
					GroupName="SizeBytes"
				/> <com:TLabel ForControl="BinaryBytes"><%[ Binary Bytes (1 mebi = 2<sup>20</sup>) ]%></com:TLabel></p>
			</div>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Show time in job log: ]%></div>
			<div class="w3-quarter w3-col">
				<com:TCheckBox
					ID="TimeInJobLog"
					CssClass="w3-check"
				/>
			</div>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Date and time format: ]%></div>
			<div class="w3-quarter w3-col">
				<com:TTextBox
					ID="DateTimeFormat"
					CssClass="w3-input w3-border w3-show-inline-block"
					ValidationGroup="AppSettingDisplay"
					Width="120px"
				/>
				<i class="fa fa-asterisk w3-text-red"></i>
				<com:TRequiredFieldValidator
					ValidationGroup="AppSettingDisplay"
					ControlToValidate="DateTimeFormat"
					ErrorMessage="<%[ Field required. ]%>"
					Display="Dynamic"
				/>
			</div>
			<script>
				var dt = document.getElementById('<%=$this->DateTimeFormat->ClientID%>');
				dt.addEventListener('mouseover', function() {
					var tip_fields = [
						'Y - <%[ full 4 digits year, ex. 2021 ]%>',
						'y - <%[ 2 digits year, ex, 21 ]%>',
						'M - <%[ 2 digits month 01..12 ]%>',
						'm - <%[ 1-2 digits month 1..12 ]%>',
						'D - <%[ 2 digits day 01..31 ]%>',
						'd - <%[ 1-2 digits day 1..31 ]%>',
						'H - <%[ 2 digits 24-hour format hour 00..23 ]%>',
						'h - <%[ 1-2 digits 24-hour format hour 0..23 ]%>',
						'G - <%[ 2 digits 12-hour format hour 01..12 ]%>',
						'g - <%[ 1-2 digits 12-hour format hour 1..12 ]%>',
						'I - <%[ 2 digits minutes 00..59 ]%>',
						'i - <%[ 1-2 digits minutes 0..59 ]%>',
						'S - <%[ 2 digits seconds 00..59 ]%>',
						's - <%[ 1-2 digits seconds 0..59 ]%>',
						'p - <%[ AM/PM value ]%>',
						'R - <%[ 24-hours format time 17:22:41 ]%>',
						'r - <%[ 12-hours format time 5:22:41 PM ]%>'
					];
					showTip(dt, '<%[ Available formats: ]%>', tip_fields.join('<br />'), {
						offset: [0, 0]
					});
				});
			</script>
		</div>
		<div class="w3-container w3-row w3-padding">
			<com:Bacularis.Web.Portlets.DirectiveTimePeriod
				ID="JobAgeOnJobStatusGraph"
				DirectiveName="Age"
				Label="<%[ Job age on the dashboard job graphs ]%>"
				Show="true"
				Required="false"
				ShowResetButton="false"
				ShowRemoveButton="false"
				TimeFormat="hour"
				Doc="<%[ Set age for jobs to display the job graphs on the dashboard page. Setting zero means displaying the graphs for all jobs without limitation. ]%>"
			/>
		</div>
		<div class="w3-center">
			<com:TActiveLinkButton
				CssClass="w3-button w3-green"
				CausesValidation="true"
				ValidationGroup="AppSettingDisplay"
				OnClick="saveDisplay"
			>
				<prop:ClientSide.OnLoading>
					document.getElementById('save_settings_display_loader').style.display = '';
				</prop:ClientSide.OnLoading>
				<prop:ClientSide.OnComplete>
					setTimeout(function() {
						document.getElementById('save_settings_display_loader').style.display = 'none';
					}, 300);
				</prop:ClientSide.OnComplete>
				<i class="fa fa-save"></i> &nbsp;<%[ Save ]%>
			</com:TActiveLinkButton>
			<i id="save_settings_display_loader" class="fa fa-sync w3-spin" style="display: none"></i>
		</div>
	</div>
	<!-- Plugins -->
	<div class="w3-container tab_item" id="application_settings_plugins" style="display: none">
		<com:Bacularis.Common.Portlets.PluginList />
	</div>
	<!-- Features -->
	<div class="w3-container tab_item" id="application_settings_features" style="display: none">
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Enable Bacula messages log window: ]%></div>
			<div class="w3-quarter w3-col">
				<com:TCheckBox
					ID="EnableMessagesLog"
					CssClass="w3-check"
				/>
				<i class="fas fa-info-circle help_icon w3-text-green" onclick="$(this).next().slideToggle('fast');"></i>
				<div class="directive_help" style="display: none">
					<dd><%[ The messages log window enables to review Bacula logs in one place available from almost every part on the interface. To collect logs is used the bconsole 'messages' command. The messages log window is displayed after clicking on the envelope icon at the top right side of the interface. This function is enabled by default. If enabled, it is available only for users with the Administrator role assigned. ]%></dd>
				</div>
			</div>
		</div>
		<div class="w3-center">
			<com:TActiveLinkButton
				CssClass="w3-button w3-green"
				CausesValidation="true"
				ValidationGroup="AppSettingFeatures"
				OnClick="saveFeatures"
			>
				<prop:ClientSide.OnLoading>
					document.getElementById('save_settings_features_loader').style.display = '';
				</prop:ClientSide.OnLoading>
				<prop:ClientSide.OnComplete>
					setTimeout(function() {
						document.getElementById('save_settings_features_loader').style.display = 'none';
					}, 300);
				</prop:ClientSide.OnComplete>
				<i class="fa fa-save"></i> &nbsp;<%[ Save ]%>
			</com:TActiveLinkButton>
			<i id="save_settings_features_loader" class="fa fa-sync w3-spin" style="display: none"></i>
		</div>
	</div>
	<!-- Audit log -->
	<div class="w3-container tab_item" id="application_settings_audit_log" style="display: none">
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Enable audit log ]%>:</div>
			<div class="w3-quarter w3-col">
				<com:TCheckBox
					ID="EnableAuditLog"
					CssClass="w3-check"
					Attributes.onclick="const cfg = $('#application_settings_audit_log_config'); if (this.checked) { cfg.slideDown('fast'); } else { cfg.slideUp('fast'); }"
				/>
				<i class="fas fa-info-circle help_icon w3-text-green" onclick="$(this).next().slideToggle('fast');"></i>
				<div class="directive_help" style="display: none">
					<dd><%[ Audit log enables to log and track all important user actions. ]%></dd>
				</div>
			</div>
		</div>
		<div id="application_settings_audit_log_config" style="display: <%=$this->EnableAuditLog->Checked ? 'block' : 'none'%>">
			<div class="w3-container w3-row w3-padding">
				<div class="w3-quarter w3-col"><%[ Maximum number of log entries ]%>:</div>
				<div class="w3-quarter w3-col">
					<com:TTextBox
						ID="AuditLogMaxLines"
						CssClass="w3-input w3-border w3-show-inline-block"
						Width="100px"
					/>
					<i class="fas fa-info-circle help_icon w3-text-green" onclick="$(this).next().slideToggle('fast');"></i>
					<div class="directive_help" style="display: none">
						<dd><%[ Maximum number of log lines stored in the audit log file. ]%></dd>
					</div>
				</div>
			</div>
			<div class="w3-container w3-row w3-padding">
				<div class="w3-quarter w3-col"><%[ Log types ]%>:</div>
				<div class="w3-half w3-col">
					<com:TCheckBox
						ID="LogTypeInfo"
						CssClass="w3-check"
					/> <label for="<%=$this->LogTypeInfo->ClientID%>"><%[ Information ]%></label>
					&nbsp;<com:TCheckBox
						ID="LogTypeWarning"
						CssClass="w3-check"
					/> <label for="<%=$this->LogTypeWarning->ClientID%>"><%[ Warning ]%></label>
					&nbsp;<com:TCheckBox
						ID="LogTypeError"
						CssClass="w3-check"
					/> <label for="<%=$this->LogTypeError->ClientID%>"><%[ Error ]%></label>
				</div>
			</div>
			<div class="w3-container w3-row w3-padding">
				<div class="w3-quarter w3-col"><%[ Log categories ]%>:</div>
				<div class="w3-half w3-col">
					<com:TCheckBox
						ID="LogCategoryConfig"
						CssClass="w3-check"
					/> <label for="<%=$this->LogCategoryConfig->ClientID%>"><%[ Configuration ]%></label>
					<i class="fas fa-info-circle help_icon w3-text-green" onclick="const el = $('div[rel=\'config\']'); const vis = el.is(':visible'); $(this).closest('div').find('div.directive_help').slideUp('fast'); if (!vis) { el.slideToggle('fast'); }" style="margin-left: 4px !important"></i>
					&nbsp;<com:TCheckBox
						ID="LogCategoryApplication"
						CssClass="w3-check"
					/> <label for="<%=$this->LogCategoryApplication->ClientID%>"><%[ Application ]%></label>
					<i class="fas fa-info-circle help_icon w3-text-green" onclick="const el = $('div[rel=\'application\']'); const vis = el.is(':visible'); $(this).closest('div').find('div.directive_help').slideUp('fast'); if (!vis) { el.slideToggle('fast'); }" style="margin-left: 4px !important"></i>
					&nbsp;<com:TCheckBox
						ID="LogCategoryAction"
						CssClass="w3-check"
					/> <label for="<%=$this->LogCategoryAction->ClientID%>"><%[ Action ]%></label>
					<i class="fas fa-info-circle help_icon w3-text-green" onclick="const el = $('div[rel=\'action\']'); const vis = el.is(':visible'); $(this).closest('div').find('div.directive_help').slideUp('fast'); if (!vis) { el.slideToggle('fast'); }" style="margin-left: 4px !important"></i>
					&nbsp;<com:TCheckBox
						ID="LogCategorySecurity"
						CssClass="w3-check"
					/> <label for="<%=$this->LogCategorySecurity->ClientID%>"><%[ Security ]%></label>
					<i class="fas fa-info-circle help_icon w3-text-green" onclick="const el = $('div[rel=\'security\']'); const vis = el.is(':visible'); $(this).closest('div').find('div.directive_help').slideUp('fast'); if (!vis) { el.slideToggle('fast'); }" style="margin-left: 4px !important"></i>
					<div rel="config" class="directive_help" style="display: none">
						<dd><%[ This category logs actions on Bacula configuration like saving, creating or removing Bacula resources. ]%></dd>
					</div>
					<div rel="application" class="directive_help" style="display: none">
						<dd><%[ This category logs application specific actions like adding, editing or removing users, roles, API hosts and others. ]%></dd>
					</div>
					<div rel="action" class="directive_help" style="display: none">
						<dd><%[ This category logs actions possible to run by users like running backup or restore and others. ]%></dd>
					</div>
					<div rel="security" class="directive_help" style="display: none">
						<dd><%[ This category logs security issues like log in actions, log in failed or 2FA failed. ]%></dd>
					</div>
				</div>
			</div>
		</div>
		<div class="w3-center w3-margin-top">
			<com:TActiveLinkButton
				CssClass="w3-button w3-green"
				CausesValidation="true"
				ValidationGroup="AppSettingAuditLog"
				OnClick="saveAuditLog"
			>
				<prop:ClientSide.OnLoading>
					document.getElementById('save_settings_audit_log_loader').style.display = '';
				</prop:ClientSide.OnLoading>
				<prop:ClientSide.OnComplete>
					setTimeout(function() {
						document.getElementById('save_settings_audit_log_loader').style.display = 'none';
					}, 300);
				</prop:ClientSide.OnComplete>
				<i class="fa fa-save"></i> &nbsp;<%[ Save ]%>
			</com:TActiveLinkButton>
			<i id="save_settings_audit_log_loader" class="fa fa-sync w3-spin" style="display: none"></i>
			<div class="w3-right w3-margin-top w3-margin-right w3-margin-bottom" title="<%[ To disable refreshing please type 0. ]%>">
				<span style="line-height: 41px"><%[ Refresh interval (sec.): ]%></span> <input type="text" id="application_settings_audit_log_refresh_interval" class="w3-input w3-border w3-right w3-margin-left" value="10" style="width: 50px">
			</div>
		</div>
		<div class="w3-container">
			<table id="application_settings_audit_log_list" class="w3-table w3-striped w3-hoverable w3-margin-bottom" style="width: 100%">
				<thead>
					<tr>
						<th></th>
						<th><%[ IP address ]%></th>
						<th><%[ Username ]%></th>
						<th><%[ Date ]%></th>
						<th><%[ Type ]%></th>
						<th><%[ Category ]%></th>
						<th><%[ Log message ]%></th>
					</tr>
				</thead>
				<tbody id="application_settings_audit_log_list_body"></tbody>
				<tfoot>
					<tr>
						<th></th>
						<th><%[ IP address ]%></th>
						<th><%[ Username ]%></th>
						<th><%[ Date ]%></th>
						<th><%[ Type ]%></th>
						<th><%[ Category ]%></th>
						<th><%[ Log message ]%></th>
					</tr>
				</tfoot>
			</table>
		</div>
		<com:TCallback ID="AuditLogUpdate" OnCallback="loadAuditLog" />
		<script>
var oAppSettingsAuditLog = {
	ids: {
		table: 'application_settings_audit_log_list',
		refresh: 'application_settings_audit_log_refresh_interval'
	},
	types: {
		info: 'INFO',
		warning: 'WARNING',
		error: 'ERROR'
	},
	def_refresh_interval: 10000,
	refresh_interval: 0,
	timeout: null,
	init: function(data) {
		const self = oAppSettingsAuditLog;
		self.data = data;
		if (self.table) {
			self.table.clear();
			self.table.rows.add(data);
			self.table.draw(false);
		} else {
			self.set_table();
			self.refresh_interval = self.def_refresh_interval;
			self.add_events();
		}
		self.load_table_cb();
	},
	add_events: function() {
		const refresh = document.getElementById(this.ids.refresh);
		refresh.addEventListener('keyup', (e) => {
			let val = refresh.value.trim();
			if (!val) {
				val = 0;
			}
			this.refresh_interval = parseInt(val, 10) * 1000;
			if (this.refresh_interval > 0) {
				this.load_table_cb();
			}
		});
	},
	set_table: function() {
		this.table = $('#' + this.ids.table).DataTable({
			data: this.data,
			deferRender: true,
			dom: 'lBfrtip',
			stateSave: true,
			stateDuration: KEEP_TABLE_SETTINGS,
			pageLength : 25,
			lengthMenu: [10, 25, 50, 75, 100],
			buttons: [
				'copy', 'csv', 'colvis'
			],
			columns: [
				{
					className: 'details-control',
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{
					data: 'ip_address',
					width: '10%'
				},
				{
					data: 'username',
					width: '10%'
				},
				{
					data: 'date',
					render: render_date_local,
					width: '15%'
				},
				{
					data: 'type',
					render: (data, type, row) => {
						let ret = data;
						if (type == 'display') {
							const span = document.createElement('SPAN');
							span.textContent = data;
							span.style.padding = '4px';
							span.style.width = '70px';
							span.classList.add('w3-tag', 'w3-small');
							if (data == this.types.info) {
								span.classList.add('w3-green');
							} else if (data == this.types.warning) {
								span.classList.add('w3-orange');
							} else if (data == this.types.error) {
								span.classList.add('w3-red');
							}
							ret = span.outerHTML;
						} else if (type == 'filter' || type == 'sort') {
							ret = data;
						}
						return ret;
					},
					width: '10%'
				},
				{
					data: 'category',
					width: '10%'
				},
				{
					data: 'log',
					width: '45%'
				}
			],
			responsive: {
				details: {
					type: 'column'
				}
			},
			columnDefs: [{
				className: 'control',
				orderable: false,
				targets: 0
			},
			{
				className: "dt-center",
				targets: [ 1, 2, 3, 4, 5 ]
			}],
			order: [3, 'desc'],
			initComplete: function () {
				this.api().columns([1, 2, 4, 5]).every(function () {
					var column = this;
					var select = $('<select><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = dtEscapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					column.data().sort().unique().each(function(d, j) {
						if (column.search() == '^' + dtEscapeRegex(d) + '$') {
							select.append('<option value="' + d + '" selected>' + d + '</option>');
						} else {
							select.append('<option value="' + d + '">' + d + '</option>');
						}
					});
				});
			}
		});
	},
	load_table: function() {
		const cb = <%=$this->AuditLogUpdate->ActiveControl->Javascript%>;
		cb.dispatch();
	},
	load_table_cb: function() {
		clearTimeout(this.timeout);
		if (this.refresh_interval > 0) {
			this.timeout = setTimeout(() => {
				this.load_table();
			}, this.refresh_interval);
		}
	}
};
$(function() {
	oAppSettingsAuditLog.load_table();
});
		</script>
	</div>
	<div class="w3-container tab_item" id="application_settings_self_test" style="display: none">
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ API host to test ]%>:</div>
			<div class="w3-quarter w3-col">
				<com:TActiveDropDownList
					ID="SelfTestAPIHosts"
					CssClass="w3-select w3-border"
				/>
			</div>
		</div>
		<div class="w3-container w3-row w3-padding">
			<div class="w3-quarter w3-col"><%[ Start test ]%>:</div>
			<div class="w3-quarter w3-col">
				<a href="javascript:void(0)" onclick="oAppSettingsSelfTest.load_table();" class="w3-button w3-green"><i class="fa-solid fa-play"></i> &nbsp;<%[ Start test ]%></a>
				<a href="javascript:void(0)" id="application_settings_self_test_download_results" onclick="oAppSettingsSelfTest.download_results();" class="w3-button w3-green" style="display: none"><i class="fa-solid fa-download"></i> &nbsp;<%[ Download results ]%></a>
				<i id="application_settings_self_test_loader" class="fa fa-sync w3-spin w3-margin-left w3-margin-right" style="visibility: hidden"></i>
				<div id="application_settings_self_test_error" class="w3-section w3-text-red" style="display: none"></div>
			</div>
		</div>
		<div class="w3-container">
			<table id="application_settings_self_test_list" class="w3-table w3-striped w3-hoverable w3-margin-bottom" style="display: none; width: 100%">
				<thead>
					<tr>
						<th></th>
						<th><%[ Category ]%></th>
						<th><%[ Test name ]%></th>
						<th><%[ Result ]%></th>
						<th><%[ Description ]%></th>
					</tr>
				</thead>
				<tbody id="application_settings_self_test_list_body"></tbody>
				<tfoot>
					<tr>
						<th></th>
						<th><%[ Category ]%></th>
						<th><%[ Test name ]%></th>
						<th><%[ Result ]%></th>
						<th><%[ Description ]%></th>
					</tr>
				</tfoot>
			</table>
		</div>
		<com:TCallback ID="SelfTestStart" OnCallback="startSelfTest">
			<prop:ClientSide.OnLoading>
				oAppSettingsSelfTest.show_loader(true);
				oAppSettingsSelfTest.show_error(false);
			</prop:ClientSide.OnLoading>
			<prop:ClientSide.OnComplete>
				oAppSettingsSelfTest.show_loader(false);
			</prop:ClientSide.OnComplete>
		</com:TCallback>
		<script>
var oAppSettingsSelfTest = {
	ids: {
		table: 'application_settings_self_test_list',
		refresh: 'application_settings_self_test_refresh_interval',
		loader: 'application_settings_self_test_loader',
		result_btn: 'application_settings_self_test_download_results',
		error: 'application_settings_self_test_error'
	},
	data: [],
	test_states: {
		info: 'info',
		warning: 'warning',
		error: 'error',
		disabled: 'disabled'
	},
	init: function(data) {
		const self = oAppSettingsSelfTest;
		self.data = data;
		if (self.table) {
			self.table.clear();
			self.table.rows.add(data);
			self.table.draw(false);
		} else {
			self.show_table(true);
			self.set_table();
		}
	},
	set_table: function() {
		this.table = $('#' + this.ids.table).DataTable({
			data: this.data,
			deferRender: true,
			dom: 'lBfrtip',
			stateSave: true,
			stateDuration: KEEP_TABLE_SETTINGS,
			pageLength : 25,
			lengthMenu: [10, 25, 50, 75, 100],
			buttons: [
				'copy', 'csv', 'colvis'
			],
			columns: [
				{
					className: 'details-control',
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{
					data: 'section',
					width: '30%'
				},
				{
					data: 'name',
					width: '20%'
				},
				{
					data: 'state',
					render: (data, type, row) => {
						let ret = data;
						if (type === 'display') {
							const img = document.createElement('I');
							img.classList.add('fa-solid', 'w3-large');
							if (data == this.test_states.info) {
								img.classList.add('fa-check-square', 'w3-text-green');
								img.title = '<%[ OK ]%>';
							} else if (data == this.test_states.warning) {
								img.classList.add('fa-exclamation-triangle', 'w3-text-orange');
								img.title = '<%[ Warning ]%>';
							} else if (data == this.test_states.error) {
								img.classList.add('fa-exclamation-circle', 'w3-text-red');
								img.title = '<%[ Error ]%>';
							} else if (data == this.test_states.disabled) {
								img.classList.add('fa-square-minus', 'w3-text-gray');
								img.title = '<%[ Disabled ]%>';
							}
							ret = img.outerHTML;
						}
						return ret;
					},
					width: '5%'
				},
				{
					data: 'description',
					width: '45%'
				}
			],
			responsive: {
				details: {
					type: 'column'
				}
			},
			columnDefs: [{
				className: 'control',
				orderable: false,
				targets: 0
			},
			{
				className: "dt-center",
				targets: [ 3 ]
			}],
			drawCallback: function () {
				this.api().columns([1, 2, 3]).every(function () {
					var column = this;
					var select = $('<select><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = dtEscapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					column.data().sort().unique().each(function(d, j) {
						if (column.search() == '^' + dtEscapeRegex(d) + '$') {
							select.append('<option value="' + d + '" selected>' + d + '</option>');
						} else {
							select.append('<option value="' + d + '">' + d + '</option>');
						}
					});
				});
			}
		});
	},
	load_table: function() {
		const cb = <%=$this->SelfTestStart->ActiveControl->Javascript%>;
		cb.dispatch();
	},
	load_table_cb: function(data) {
		oAppSettingsSelfTest.init(data);
		oAppSettingsSelfTest.show_download_results_btn(true);
	},
	show_table: function(show) {
		const table = document.getElementById(this.ids.table);
		table.style.display = show ? 'table' : 'none';
	},
	test_result: function(type, value) {
		let ret = false;
		if (type === 'boolean') {
			ret = data;
		}
		return ret;
	},
	show_loader: function(show) {
		const loader = document.getElementById(this.ids.loader);
		loader.style.visibility = show ? 'visible' : 'hidden';
	},
	download_results: function() {
		this.table.button('1').trigger()
	},
	show_download_results_btn: function(show) {
		const btn = document.getElementById(this.ids.result_btn);
		btn.style.display = show ? 'inline-block' : 'none';
	},
	set_error: function(errmsg) {
		const self = oAppSettingsSelfTest;
		const error = document.getElementById(self.ids.error);
		error.textContent = errmsg;
		self.show_error(true);
		self.show_download_results_btn(false);
	},
	show_error: function(show) {
		const error = document.getElementById(this.ids.error);
		error.style.display = show ? 'block' : 'none';
	}
};
		</script>
	</div>
</com:TContent>
