<%@ MasterClass="Bacularis\Web\Layouts\Main" Theme="Baculum-v2"%>
<com:TContent ID="Main">
	<!-- Header -->
	<header class="w3-container">
		<h5>
			<b><i class="fa fa-database"></i> <%[ Storage list ]%></b>
		</h5>
	</header>
	<div class="w3-container">
		<button type="button" class="w3-button w3-margin-bottom w3-green<%=!$this->getApplication()->getSession()->itemAt('dir') ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'dir', 'component_name' => $this->getApplication()->getSession()->itemAt('dir'), 'resource_type' => 'Storage'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add storage ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green<%=!$this->getApplication()->getSession()->itemAt('sd') ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'sd', 'component_name' => $this->getApplication()->getSession()->itemAt('sd'), 'resource_type' => 'Device'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add device ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green<%=!$this->getApplication()->getSession()->itemAt('sd') ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'sd', 'component_name' => $this->getApplication()->getSession()->itemAt('sd'), 'resource_type' => 'Autochanger'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add autochanger ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green" onclick="document.location.href='<%=$this->Service->constructUrl('NewFileStorageWizard')%>';"><i class="fa fa-magic"></i> &nbsp;<%[ Add file storage ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green" onclick="document.location.href='<%=$this->Service->constructUrl('NewTapeStorageWizard')%>';"><i class="fa fa-magic"></i> &nbsp;<%[ Add tape storage ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green" onclick="document.location.href='<%=$this->Service->constructUrl('NewCloudStorageWizard')%>';"><i class="fa fa-magic"></i> &nbsp;<%[ Add cloud storage ]%></button>
		<com:Bacularis.Web.Portlets.TabViews ID="StorageViews" />
	</div>
	<!-- Tag tools -->
	<com:Bacularis.Web.Portlets.TagTools ID="TagToolsStorageList" ViewName="storage_list" />
	<div class="w3-container">
		<table id="storage_list" class="display w3-table w3-striped w3-hoverable w3-margin-bottom" style="width: 100%">
			<thead>
				<tr>
					<th></th>
					<th>StorageId</th>
					<th><%[ Name ]%></th>
					<th><%[ Autochanger ]%></th>
					<th><%[ Tag ]%></th>
					<th class="w3-center"><%[ Actions ]%></th>
				</tr>
			</thead>
			<tbody id="storage_list_body"></tbody>
			<tfoot>
				<tr>
					<th></th>
					<th>StorageId</th>
					<th><%[ Name ]%></th>
					<th><%[ Autochanger ]%></th>
					<th><%[ Tag ]%></th>
					<th class="w3-center"><%[ Actions ]%></th>
				</tr>
			</tfoot>
		</table>
		<p class="info w3-hide-medium w3-hide-small"><%[ Tip: Use left-click to select table row. Use CTRL + left-click to multiple row selection. Use SHIFT + left-click to add a range of rows to selection. ]%></p>
	</div>
<script type="text/javascript">
var oStorageList = {
	ids: {
		storage_list: 'storage_list',
		storage_list_body: 'storage_list_body'
	},
	data: [],
	table: null,
	table_toolbar: null,
	actions: [
		{
			action: 'apply_configs',
			enabled: <%=$this->User->isInRole(WebUserRoles::ADMIN) ? 'true' : 'false'%>,
			label: '<%[ Apply configs ]%>',
			value: 'name',
			before: function() {
				const cb = () => {
					let selected = [];
					let sel_data = oStorageList.table.rows({selected: true}).data();
					sel_data.each(function(v, k) {
						selected.push(v.name);
					});
					return selected;
				};
				oBulkApplyConfigsModal.set_item_cb(cb);
				oBulkApplyConfigsModal.show_window(true);
			}
		}
	],
	init: function(data) {
		this.data = data;
		if (!this.table) {
			this.set_table();
			this.set_bulk_actions();
			this.set_events();
		} else {
			this.refresh(data);
		}
	},
	refresh: function(data) {
		const page = this.table.page();
		this.table.clear().rows.add(data).draw();
		this.table.page(page).draw(false);
		this.table_toolbar.style.display = 'none';
	},
	set_events: function() {
		document.getElementById(this.ids.storage_list).addEventListener('click', function(e) {
			$(function() {
				const wa = (this.table.rows({selected: true}).data().length > 0) ? 'show' : 'hide';
				$(this.table_toolbar).animate({
					width: wa
				}, 'fast');
			}.bind(this));
		}.bind(this));
	},
	set_table: function() {
		this.table = $('#' + this.ids.storage_list).DataTable({
			data: this.data,
			deferRender: true,
			autoWidth: false,
			fixedHeader: {
				header: true,
				headerOffset: $('#main_top_bar').height()
			},
			layout: {
				topStart: [
					{
						pageLength: {}
					},
					{
						buttons: ['copy', 'csv', 'colvis']
					},
					{
						div: {
							className: 'table_toolbar'
						}
					}
				],
				topEnd: [
					'search'
				],
				bottomStart: [
					'info'
				],
				bottomEnd: [
					'paging'
				]
			},
			stateSave: true,
			stateDuration: KEEP_TABLE_SETTINGS,
			columns: [
				{
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{data: 'storageid'},
				{data: 'name'},
				{
					data: 'autochanger',
					render: function(data, type, row) {
						return ((data === 1) ? '<%[ Yes ]%>' : '<%[ No ]%>');
					}
				},
				{
					data: 'storageid',
					render: (data, type, row) => {
						const id = 'storageid';
						const tt_obj = oTagTools_<%=$this->TagToolsStorageList->ClientID%>;
						const table = 'oStorageList.table';
						return render_tags(type, id, data, tt_obj, table);
					}
				},
				{
					data: 'storageid',
					render: function (data, type, row) {
						let btns = '';
						let i;
						if (<%=$this->User->isInRole(WebUserRoles::ADMIN) === false || !$this->getApplication()->getSession()->itemAt('dir') ? 'false' : 'true'%>) {
							// Quick edit button
							const quick_edit = document.createElement('BUTTON');
							quick_edit.className = 'w3-button w3-green';
							quick_edit.type = 'button';
							quick_edit.title = '<%[ Quick edit ]%>';
							i = document.createElement('I');
							i.className = 'fa fa-edit';
							quick_edit.appendChild(i);
							quick_edit.setAttribute('onclick', "open_quick_resource_edit('dir', 'Storage', '" + row.name + "')");
							btns += (quick_edit.outerHTML + ' ');
						}
						const details = document.createElement('BUTTON');
						details.className = 'w3-button w3-green';
						details.type = 'button';
						details.title = '<%[ Details ]%>';
						i = document.createElement('I');
						i.className = 'fa fa-list-ul';
						details.appendChild(i);
						details.setAttribute('onclick', "document.location.href = '/web/storage/" + data + "/'");
						btns += details.outerHTML;
						return btns;
					},
					className: 'w3-center'
				}
			],
			responsive: {
				details: {
					type: 'column',
					display: DataTable.Responsive.display.childRow
				}
			},
			columnDefs: [{
				className: 'dtr-control',
				orderable: false,
				targets: 0
			},
			{
				className: "dt-center",
				targets: [ 1, 3, 4, 5 ]
			}],
			select: {
				style: 'os',
				selector: 'td:not(:last-child):not(:first-child):not(:nth-last-child(2))',
				blurable: false
			},
			order: [1, 'asc'],
			drawCallback: function () {
				this.api().columns([2, 3]).every(function () {
					var column = this;
					var select = $('<select class="dt-select"><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = dtEscapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					column.cells('', column[0]).render('display').unique().sort().each(function(d, j) {
						if (column.search() == '^' + dtEscapeRegex(d) + '$') {
							select.append('<option value="' + d + '" selected>' + d + '</option>');
						} else {
							select.append('<option value="' + d + '">' + d + '</option>');
						}
					});
				});
			}
		});
	},
	set_bulk_actions: function() {
		this.table_toolbar = get_table_toolbar(this.table, this.actions, {
			actions: '<%[ Select action ]%>',
			ok: '<%[ OK ]%>'
		});
	}
};
function get_storage_list_data() {
	return <%=json_encode($this->storages)%>;
}
function update_storage_list_table(data, init) {
	if (init) {
		oStorageList.refresh(data);
	} else {
		oStorageList.init(data);
	}
}
$(function() {
	<%=$this->StorageViews->ClientID%>_TabViews.tabs.apply_filters();
});
</script>
	<com:Bacularis.Web.Portlets.BulkApplyConfigsModal
		ID="BulkApplyConfigsStorage"
		ComponentType="dir"
		ResourceType="Storage"
	/>
</com:TContent>
