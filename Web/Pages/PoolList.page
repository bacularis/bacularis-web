<%@ MasterClass="Bacularis\Web\Layouts\Main" Theme="Baculum-v2"%>
<com:TContent ID="Main">
	<!-- Header -->
	<header class="w3-container">
		<h5>
			<b><i class="fa fa-tape"></i> <%[ Pool list ]%></b>
		</h5>
	</header>
	<div class="w3-container">
		<div class="w3-margin-bottom">
			<button type="button" class="w3-button w3-green<%=empty($_SESSION['dir']) ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'dir', 'component_name' => $_SESSION['dir'], 'resource_type' => 'Pool'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add pool ]%></button>
		</div>
		<com:Bacularis.Web.Portlets.TabViews ID="PoolViews" />
	</div>
	<div class="w3-container">
		<table id="pool_list" class="w3-table w3-striped w3-hoverable w3-margin-bottom" style="width: 100%">
			<thead>
				<tr>
					<th></th>
					<th>PoolId</th>
					<th><%[ Name ]%></th>
					<th><%[ No. vols ]%></th>
					<th><%[ Max. vols ]%></th>
					<th><%[ Vol. retention ]%></th>
					<th><%[ AutoPrune ]%></th>
					<th><%[ Recycle ]%></th>
					<th><%[ Actions ]%></th>
				</tr>
			</thead>
			<tbody id="pool_list_body"></tbody>
			<tfoot>
				<tr>
					<th></th>
					<th>PoolId</th>
					<th><%[ Name ]%></th>
					<th><%[ No. vols ]%></th>
					<th><%[ Max. vols ]%></th>
					<th><%[ Vol. retention ]%></th>
					<th><%[ AutoPrune ]%></th>
					<th><%[ Recycle ]%></th>
					<th><%[ Actions ]%></th>
				</tr>
			</tfoot>
		</table>
		<p class="info w3-hide-medium w3-hide-small"><%[ Tip: Use left-click to select table row. Use CTRL + left-click to multiple row selection. Use SHIFT + left-click to add a range of rows to selection. ]%></p>
	</div>
<script>
var oPoolList = {
	ids: {
		pool_list: 'pool_list',
		pool_list_body: 'pool_list_body'
	},
	data: [],
	table: null,
	table_toolbar: null,
	actions: [
		{
			action: 'apply_configs',
			enabled: <%=$this->User->isInRole(WebUserRoles::ADMIN) ? 'true' : 'false'%>,
			label: '<%[ Apply configs ]%>',
			value: 'name',
			before: function() {
				const cb = () => {
					let selected = [];
					let sel_data = oPoolList.table.rows({selected: true}).data();
					sel_data.each(function(v, k) {
						selected.push(v.name);
					});
					return selected;
				};
				oBulkApplyConfigsModal.set_item_cb(cb);
				oBulkApplyConfigsModal.show_window(true);
			}
		}
	],
	init: function(data) {
		this.data = data;
		if (!this.table) {
			this.set_table();
			this.set_bulk_actions();
			this.set_events();
		} else {
			this.refresh(data);
		}
	},
	refresh: function(data) {
		const page = this.table.page();
		this.table.clear().rows.add(data).draw();
		this.table.page(page).draw(false);
	},
	set_events: function() {
		document.getElementById(this.ids.pool_list).addEventListener('click', function(e) {
			$(function() {
				this.table_toolbar.style.display = this.table.rows({selected: true}).data().length > 0 ? '' : 'none';
			}.bind(this));
		}.bind(this));
	},
	set_table: function() {
		this.table = $('#' + this.ids.pool_list).DataTable({
			data: this.data,
			deferRender: true,
			dom: 'lB<"table_toolbar">frtip',
			stateSave: true,
			stateDuration: KEEP_TABLE_SETTINGS,
			buttons: [
				'copy', 'csv', 'colvis'
			],
			columns: [
				{
					className: 'details-control',
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{data: 'poolid'},
				{data: 'name'},
				{
					data: 'numvols'
				},
				{
					data: 'maxvols'
				},
				{
					data: 'volretention',
					render: render_time_period
				},
				{
					data: 'autoprune',
					render: function(data, type, row) {
						return (data == 1 ? '<%[ Yes ]%>' : '<%[ No ]%>');
					}
				},
				{
					data: 'recycle',
					render: function(data, type, row) {
						return (data == 1 ? '<%[ Yes ]%>' : '<%[ No ]%>');
					}
				},
				{
					data: 'poolid',
					render: function (data, type, row) {
						let btns = '';
						let i;
						if (<%=$this->User->isInRole(WebUserRoles::ADMIN) === false || empty($_SESSION['dir']) ? 'false' : 'true'%>) {
							// Quick edit button
							const quick_edit = document.createElement('BUTTON');
							quick_edit.className = 'w3-button w3-green';
							quick_edit.type = 'button';
							quick_edit.title = '<%[ Quick edit ]%>';
							i = document.createElement('I');
							i.className = 'fa fa-edit';
							quick_edit.appendChild(i);
							quick_edit.setAttribute('onclick', "open_quick_resource_edit('dir', 'Pool', '" + row.name + "')");
							btns += (quick_edit.outerHTML + ' ');
						}
						const details = document.createElement('BUTTON');
						details.className = 'w3-button w3-green';
						details.type = 'button';
						details.title = '<%[ Details ]%>';
						i = document.createElement('I');
						i.className = 'fa fa-list-ul';
						details.appendChild(i);
						details.setAttribute('onclick', "document.location.href = '/web/pool/" + data + "/'");
						btns += details.outerHTML;
						return btns;
					}
				}
			],
			responsive: {
				details: {
					type: 'column'
				}
			},
			columnDefs: [{
				className: 'control',
				orderable: false,
				targets: 0
			},
			{
				className: "dt-center",
				targets: [ 1, 3, 4, 6, 7, 8 ]
			}],
			select: {
				style: 'os',
				selector: 'td:not(:last-child):not(:first-child)',
				blurable: false
			},
			order: [2, 'asc'],
			drawCallback: function () {
				this.api().columns([2, 3, 4, 5, 6, 7]).every(function () {
					var column = this;
					var select = $('<select><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = dtEscapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					if ([3, 4].indexOf(column[0][0]) !== -1) {
						column.cells('', column[0]).render('display').unique().sort(sort_natural).each(function(d, j) {
							if (column.search() == '^' + dtEscapeRegex(d) + '$') {
								select.append('<option value="' + d + '" selected>' + d + '</option>');
							} else {
								select.append('<option value="' + d + '">' + d + '</option>');
							}
						});
					} else if (column[0][0] == 5) {
						column.data().unique().sort(sort_natural).each(function (d, j) {
							var time = Units.format_time_period(d);
							var time_f = time.value + ' ' + time.format + ((time.value > 0) ? 's': '');
							if (column.search() == '^' + dtEscapeRegex(time_f) + '$') {
								select.append('<option value="' + time_f + '" selected>' + time_f + '</option>');
							} else {
								select.append('<option value="' + time_f + '">' + time_f + '</option>');
							}
						});
					} else {
						column.cells('', column[0]).render('display').unique().sort().each(function(d, j) {
							if (column.search() == '^' + dtEscapeRegex(d) + '$') {
								select.append('<option value="' + d + '" selected>' + d + '</option>');
							} else {
								select.append('<option value="' + d + '">' + d + '</option>');
							}
						});
					}
				});
			}
		});
	},
	set_bulk_actions: function() {
		this.table_toolbar = get_table_toolbar(this.table, this.actions, {
			actions: '<%[ Actions ]%>',
			ok: '<%[ OK ]%>'
		});
	}
};
function get_pool_list_data() {
	return oData.pools;
}
function update_pool_list_table(data, init) {
	if (init) {
		oPoolList.refresh(data);
	} else {
		oPoolList.init(data);
	}
}
MonitorParams = {pools: null};
$(function() {
	MonitorCalls.push(function() {
		<%=$this->PoolViews->ClientID%>_TabViews.tabs.apply_filters();
	});
});
</script>
	<com:Bacularis.Web.Portlets.BulkApplyConfigsModal
		ID="BulkApplyConfigsPool"
		ComponentType="dir"
		ResourceType="Pool"
	/>
</com:TContent>
